{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bemvindo ao convutell","text":"<p>Este \u00e9 o guia de documenta\u00e7\u00e3o do Convutell, uma ferramenta de automatiza\u00e7\u00e3o de scripts Python e SQL, desenvolvida utilizando as tecnologias Python, Docker, FastAPI e MongoDB. O Convutell \u00e9 ideal para tarefas de engenharia de dados, RPA (Automa\u00e7\u00e3o de Processos Rob\u00f3ticos) e ETL (Extra\u00e7\u00e3o, Transforma\u00e7\u00e3o e Carga).</p>"},{"location":"#comando-para-executar-localmente","title":"Comando para executar localmente","text":"<ul> <li><code>docker build -t nome_do_projeto:latest .</code> -  Constr\u00f3i a imagem do projeto.</li> <li><code>docker run -d -p 8000:8000 nome_do_projeto:latest</code> - Inicia o servidor de documenta\u00e7\u00e3o com recarregamento em tempo real.</li> </ul>"},{"location":"#estrutura-do-projeto","title":"Estrutura do projeto","text":"<pre><code>Dockerfile    # The configuration file docker.\nconvutell/\n    logs/\n    config/\n    app.py\n    service.py  # Application execution configuration file.\n    ...\n</code></pre> <p>Para obter informa\u00e7\u00f5es detalhadas sobre o Convutell e como us\u00e1-lo, consulte a documenta\u00e7\u00e3o completa em mkdocs.org.</p>"},{"location":"instalation/","title":"Instala\u00e7\u00e3o","text":"<p>A instala\u00e7\u00e3o do convutell \u00e9 muito simples, podendo ser adicionado ao servidores linux e windows atrav\u00e9s do docker.</p>"},{"location":"instalation/#intalado-apartir-do-github","title":"Intalado apartir do github","text":"<p>Para executar o projeto, \u00e9 necess\u00e1rio seguir os seguintes passos:</p> <p>Clonar o reposit\u00f3rio do projeto do Github.</p> <p>Instalar as depend\u00eancias atrav\u00e9s do comando</p> <ul> <li><code>pip install -r requirements.txt</code>.</li> </ul> <p>O API de integra\u00e7\u00e3o \u00e9 constru\u00edda sobre o FastAPI 0.95.1 e o Python 3.7. Toda adapta\u00e7\u00e3o poder\u00e1 ser realizada em ver\u00f5es subsequentes.</p> <p>Executar o servidor web com o comando</p> <ul> <li><code>uvicorn app:app --reload</code>. </li> </ul>"},{"location":"instalation/#instalacao-local-via-docker","title":"Instala\u00e7a\u00f5 local via Docker","text":"<p>Para seeguir com a insta\u00e7\u00e3o via docker \u00e9 necess\u00e1rio possuir o recurso instalado. </p> <p>Em seguida configure o arquivo Dockerfile para adequar a configura\u00e7\u00e3o ideal do seu ambiente. Esta implementa\u00e7\u00e3o do projeto para a imagem docker est\u00e1 em desevolvimento, portanto cabe avaliar a viabilidade das configura\u00e7\u00e3o dispostas.</p> <ul> <li><code>docker build -t nome_do_projeto:latest .</code>. </li> </ul> <p>Use o comando abaixo para inicar o seu container.</p> <ul> <li><code>docker run -d -p 8000:8000 nome_do_projeto:latest</code>.</li> </ul> <p>Optamos por utilizar o Supervisor para monitoramento e controle dos nossos processos. Tanto a API como Processo de ETL ser\u00e1 monitorados pelo Supervisor. Toda a configura\u00e7\u00e3o ser\u00e1 passada para o controle do Supervidor atrav\u00e9s do arquivo supervisord.conf.</p> <pre><code>[program:etl]\ncommand=/opt/venv/bin/python /convutell/etl.py\ndirectory=/convutell\nautostart=true\nautorestart=true\nstartretries=3\nredirect_stderr=true\nstdout_logfile=/convutell/logs/etl/etl.log\nstdout_logfile_maxbytes=10MB\n\n</code></pre>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/","title":"API","text":"<p>A API \u00e9 utilizada para realizar o gerenciamento da aplica\u00e7\u00e3o e \u00e9 consumida pela aplica\u00e7\u00e3o front-end para facilitar a utiliza\u00e7\u00e3o da ferramenta.</p> <p>Utilizamos o framework FastAPI para a constru\u00e7\u00e3o da API e o MongoDB como banco de dados para persist\u00eancia dos dados.</p> <p></p>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#projetos","title":"Projetos","text":"<p>Todos os scripts s\u00e3o realizados dentro de um projeto. O projeto \u00e9 respons\u00e1vel por gerenciar uma ou v\u00e1rias consultas constru\u00eddas em Python ou SQL. O projeto pode possuir conex\u00f5es ou n\u00e3o, dependendo do tipo de projeto. Caso seja um script, ele n\u00e3o verificar\u00e1 conex\u00e3o.</p> <p>Para executar os projetos, eles precisam estar ativos, o que \u00e9 indicado pelo campo fl_actived na documenta\u00e7\u00e3o.</p> <p>URL: /GetAllProjects               M\u00e9todo: GET                Par\u00e2metros: Nenhum     Resposta de Sucesso: Lista de objetos ProjectModel representando os projetos cadastrados.</p> <p>Exemplo de requisi\u00e7\u00e3o:</p> <pre><code>\n[\n  {\n    \"id_project\": 1,\n    \"name_project\": \"Projeto 1\",\n    \"dt_last_run\": \"2023-06-15T10:30:00\",\n    \"fl_active\": true,\n    \"connection_origin1\": \"origem1\",\n    \"connection_origin2\": \"origem2\"\n  }\n]\n\n</code></pre>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#query-queries","title":"Query (Queries)","text":"<p>A rota de Consultas (Queries) permite gerenciar opera\u00e7\u00f5es espec\u00edficas realizadas dentro de um projeto. Essa rota oferece endpoints para criar, recuperar, atualizar e excluir consultas.</p> <p>Criar Consulta Endpoint para criar uma nova consulta.</p> <p>URL: /CreateQueries                M\u00e9todo: POST                   Par\u00e2metros: Nenhum             Corpo da Requisi\u00e7\u00e3o: Objeto QuerySaveModel   representando os dados da consulta a ser criada.                                  Resposta de Sucesso: Retorna o objeto QuerySaveModel representando a consulta criada.     </p>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#obter-consulta-por-id","title":"Obter Consulta por ID","text":"<p>Recupera uma consulta com base em um ID espec\u00edfico.</p> <p>URL: /GetQueriesId/{id_query}              M\u00e9todo: GET                Par\u00e2metros: id_query - ID da consulta a ser recuperada.                                Resposta de Sucesso: Retorna o objeto QueryModel representando a consulta encontrada.   </p>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#obter-consultas-por-id-do-projeto","title":"Obter Consultas por ID do Projeto","text":"<p>Recupera todas as consultas associadas a um projeto espec\u00edfico.</p> <p>URL: /GetqueriesIdprojects/{id_project}                M\u00e9todo: GET                    Par\u00e2metros: id_project - ID do projeto para o qual as consultas devem ser recuperadas.     Resposta de Sucesso: Retorna o objeto       QueryModel representando a consulta encontrada.                                                  </p>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#atualizar-consulta","title":"Atualizar Consulta","text":"<p>Atualiza uma consulta existente com base em um ID espec\u00edfico.</p> <p>URL: /UpdateQueries/{id_query}             M\u00e9todo: PUT                            Par\u00e2metros: id_query - ID da consulta a ser atualizada.                            Corpo da Requisi\u00e7\u00e3o: Objeto QuerySaveModel representando os dados atualizados da consulta.                                     Resposta de Sucesso: Retorna o objeto QueryModel representando a consulta atualizada.                                   </p>"},{"location":"Gerenciamento/Integra%C3%A7%C3%A3o/#excluir-consulta","title":"Excluir Consulta","text":"<p>Exclui uma consulta existente com base em um ID espec\u00edfico.</p> <p>URL: /DeleteQueries/{id_query}             M\u00e9todo: DELETE                             Par\u00e2metros: id_query - ID da consulta a ser exclu\u00edda.                                   Resposta de Sucesso: Retorna um objeto contendo a mensagem \"Consulta exclu\u00edda com sucesso\".                                     </p> <p>Essas rotas permitem o gerenciamento completo das consultas, incluindo cria\u00e7\u00e3o, recupera\u00e7\u00e3o, atualiza\u00e7\u00e3o e exclus\u00e3o. Voc\u00ea pode utilizar essas informa\u00e7\u00f5es para documentar a funcionalidade e os retornos dessas rotas na sua documenta\u00e7\u00e3o.</p>"}]}